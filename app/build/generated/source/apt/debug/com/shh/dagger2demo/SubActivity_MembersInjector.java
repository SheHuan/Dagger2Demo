// Generated by Dagger (https://google.github.io/dagger).
package com.shh.dagger2demo;

import com.shh.dagger2demo.models.Book;
import com.shh.dagger2demo.models.Flower;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class SubActivity_MembersInjector implements MembersInjector<SubActivity> {
  private final Provider<Book> bookProvider;

  private final Provider<Flower> flowerProvider;

  public SubActivity_MembersInjector(Provider<Book> bookProvider, Provider<Flower> flowerProvider) {
    this.bookProvider = bookProvider;
    this.flowerProvider = flowerProvider;
  }

  public static MembersInjector<SubActivity> create(
      Provider<Book> bookProvider, Provider<Flower> flowerProvider) {
    return new SubActivity_MembersInjector(bookProvider, flowerProvider);
  }

  @Override
  public void injectMembers(SubActivity instance) {
    injectBook(instance, bookProvider.get());
    injectFlower(instance, flowerProvider.get());
  }

  public static void injectBook(SubActivity instance, Book book) {
    instance.book = book;
  }

  public static void injectFlower(SubActivity instance, Flower flower) {
    instance.flower = flower;
  }
}

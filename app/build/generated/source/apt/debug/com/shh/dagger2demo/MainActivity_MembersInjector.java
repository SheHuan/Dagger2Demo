// Generated by Dagger (https://google.github.io/dagger).
package com.shh.dagger2demo;

import com.shh.dagger2demo.models.Book;
import com.shh.dagger2demo.models.Cat;
import com.shh.dagger2demo.models.Flower;
import com.shh.dagger2demo.models.User;
import dagger.Lazy;
import dagger.MembersInjector;
import dagger.internal.DoubleCheck;
import javax.inject.Provider;

public final class MainActivity_MembersInjector implements MembersInjector<MainActivity> {
  private final Provider<Cat> catProvider;

  private final Provider<Flower> flower1Provider;

  private final Provider<Flower> flower2Provider;

  private final Provider<Flower> flower3Provider;

  private final Provider<User> userProvider;

  private final Provider<Book> book1Provider;

  private final Provider<Book> book2Provider;

  public MainActivity_MembersInjector(
      Provider<Cat> catProvider,
      Provider<Flower> flower1Provider,
      Provider<Flower> flower2Provider,
      Provider<Flower> flower3Provider,
      Provider<User> userProvider,
      Provider<Book> book1Provider,
      Provider<Book> book2Provider) {
    this.catProvider = catProvider;
    this.flower1Provider = flower1Provider;
    this.flower2Provider = flower2Provider;
    this.flower3Provider = flower3Provider;
    this.userProvider = userProvider;
    this.book1Provider = book1Provider;
    this.book2Provider = book2Provider;
  }

  public static MembersInjector<MainActivity> create(
      Provider<Cat> catProvider,
      Provider<Flower> flower1Provider,
      Provider<Flower> flower2Provider,
      Provider<Flower> flower3Provider,
      Provider<User> userProvider,
      Provider<Book> book1Provider,
      Provider<Book> book2Provider) {
    return new MainActivity_MembersInjector(
        catProvider,
        flower1Provider,
        flower2Provider,
        flower3Provider,
        userProvider,
        book1Provider,
        book2Provider);
  }

  @Override
  public void injectMembers(MainActivity instance) {
    injectCat(instance, catProvider.get());
    injectFlower1(instance, flower1Provider.get());
    injectFlower2(instance, flower2Provider.get());
    injectFlower3(instance, flower3Provider.get());
    injectUser(instance, userProvider.get());
    injectBook1(instance, DoubleCheck.lazy(book1Provider));
    injectBook2(instance, book2Provider);
  }

  public static void injectCat(MainActivity instance, Cat cat) {
    instance.cat = cat;
  }

  public static void injectFlower1(MainActivity instance, Flower flower1) {
    instance.flower1 = flower1;
  }

  public static void injectFlower2(MainActivity instance, Flower flower2) {
    instance.flower2 = flower2;
  }

  public static void injectFlower3(MainActivity instance, Flower flower3) {
    instance.flower3 = flower3;
  }

  public static void injectUser(MainActivity instance, User user) {
    instance.user = user;
  }

  public static void injectBook1(MainActivity instance, Lazy<Book> book1) {
    instance.book1 = book1;
  }

  public static void injectBook2(MainActivity instance, Provider<Book> book2) {
    instance.book2 = book2;
  }
}
